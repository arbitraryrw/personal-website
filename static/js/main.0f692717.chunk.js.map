{"version":3,"sources":["logo.svg","components/pages/About.js","components/layout/Header.js","components/layout/SocialMediaIcons.js","components/layout/Banner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","About","react_default","a","createElement","Fragment","library","add","faLinkedin","faInstagram","faGithubSquare","faTwitterSquare","faEnvelope","faKey","faMapMarkerAlt","SocialMediaIcons","className","style","socialMediaStyle","listItemStyle","color","href","index_es","icon","size","Component","marginRight","float","marginTop","padding","listStyle","listStyleType","display","Banner","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleType","dataText","state","bannerText","_this$state","firstCycle","isDeleting","loopNum","text","typingSpeed","i","length","fullText","setState","substring","shift","setTimeout","minWidth","marginBottom","fontSize","id","layout_SocialMediaIcons","React","App","posts","uuid","v4","title","completed","markComplete","map","post","deletePost","toConsumableArray","filter","addPost","newPost","concat","_this2","axios","get","then","resp","data","react_router_dom","react_router","exact","path","render","layout_Banner","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f692717.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nfunction About(){\n  return (\n    <React.Fragment>\n\n      <h1>\n        <p> Personal website, this is the first iteration and quite possibly the last depending on how bad this goes.\n        </p>\n      </h1>\n    </React.Fragment>\n  )\n}\n\nexport default About;\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nfunction Header() {\n\n  return(\n    <header>\n      <p style = { headerStyle }>\n        Post List\n      </p>\n\n      <Link style={ linkStyle } to=\"/\">Home</Link> | <Link style={ linkStyle } to=\"about\">About</Link>\n    </header>\n  )\n}\n\nconst headerStyle = {\n  background: '#333',\n  color: '#fff',\n  textAlign: 'center',\n  padding: '10px'\n}\n\nconst linkStyle = {\n  color: '#fff',\n  textDecoration: 'none'\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\n\nimport {\n faLinkedin,\n faInstagram,\n faGithubSquare,\n faTwitterSquare\n} from '@fortawesome/free-brands-svg-icons';\n\nimport { faEnvelope, faKey, faMapMarkerAlt} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n faLinkedin,\n faInstagram,\n faGithubSquare,\n faTwitterSquare,\n faEnvelope,\n faKey,\n faMapMarkerAlt\n);\n\n class SocialMediaIcons extends Component {\n   render() {\n    return (\n     <div className=\"social-icons\">\n\n\n        <ul style = {socialMediaStyle} >\n          <li style = {listItemStyle}>\n            <a style = {{color:\"grey\"}} href=\"https://twitter.com/arbitraryrw\">\n            <FontAwesomeIcon icon={faTwitterSquare} size=\"2x\" />\n            </a>\n          </li>\n          <li  style = {listItemStyle}>\n            <a style = {{color:\"grey\"}} href=\"https://github.com/arbitraryrw\">\n            <FontAwesomeIcon icon={faGithubSquare} size=\"2x\" />\n            </a>\n          </li>\n          <li  style = {listItemStyle}>\n            <a style = {{color:\"grey\"}} href=\"https://www.linkedin.com/in/nikola-cucakovic-623aa677/\">\n            <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\n            </a>\n          </li>\n          <li  style = {listItemStyle}>\n            <a style = {{color:\"grey\"}}href=\"https://www.instagram.com/nikapotomus/\">\n            <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\n            </a>\n          </li>\n        </ul>\n\n        <p style = {{color:\"grey\"}} >\n          <FontAwesomeIcon icon={faMapMarkerAlt} size=\"1x\" />\n          &nbsp;London, UK\n        </p>\n\n      </div>\n\n    )\n  }\n }\n\n const listItemStyle = {\n    marginRight:\"20px\",\n    float: \"left\"\n }\n\n const socialMediaStyle = {\n   marginTop: \"10px\",\n   padding:\"0px\",\n   listStyle:\"none\",\n   // background: '#333',\n   listStyleType: \"none\",\n   display:\"flex\"\n }\n\n export default SocialMediaIcons;\n","import React from 'react';\nimport SocialMediaIcons from './SocialMediaIcons';\n\nclass Banner extends React.Component {\n\n  constructor(props) {\n  super(props);\n\n  this.state = {\n    firstCycle:true,\n    text: '',\n    isDeleting: false,\n    loopNum: 0,\n    typingSpeed: 150,\n    bannerText: [\n      \"Hey, I'm Nik\",\n      \"I build things\",\n      \"I break things\",\n      \"I solve problems\"\n    ]\n  }\n}\n\n  handleType = () => {\n    // console.log(this.props.banner)\n    const dataText  = this.state.bannerText;\n    const { firstCycle, isDeleting, loopNum, text, typingSpeed } = this.state;\n    const i = loopNum % dataText.length;\n    const fullText = dataText[i];\n\n    // console.log(\"Writing: \" + fullText + \", index: \" + i)\n\n    this.setState({\n      text: isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1),\n      typingSpeed: isDeleting ? 50 : 200\n    });\n\n    if (!isDeleting && text === fullText) {\n\n      //State change done before timeout, that was a boo boo\n      this.setState({ isDeleting: true });\n\n    } else if (isDeleting && text.length === 0) {\n      // console.log(\"HIT\")\n\n      // Get rid of the intro line after the first cycle\n      // This removes the first intro element in the array dataText\n      // component state after completing the first cycle and resets\n      // the loop count.\n\n      if (firstCycle && i+1 === dataText.length){\n        // console.log(\"We ripping it out!\")\n\n        dataText.shift()\n        this.setState({\n          firstCycle: false,\n          isDeleting: false,\n        });\n      }\n      else{\n        this.setState({\n          isDeleting: false,\n          loopNum: loopNum + 1\n        });\n      }\n    }\n\n    setTimeout(this.handleType, typingSpeed);\n  };\n\n\n  componentDidMount() {\n    this.handleType();\n  }\n\n  render(){\n    // console.log(\"content: \" + this.props.banner[0]);\n    return(\n\n    //   this.props.banner.map((banner, index) => (\n    //\n    //   <p key={index} > { this.printLetterByLetter(banner) } </p>\n    //\n    // ))\n    <div>\n    <p style= {{minWidth: '100px', padding:\"0\", marginBottom:\"5px\", fontSize: \"5vmin\" }} >\n      <span>{ this.state.text }</span>\n      <span id=\"cursor\"></span>\n    </p>\n\n    <p style= {{minWidth: '100px', marginTop:\"0\"}}>\n    Security Specialist / Developer / Reverse Engineer\n    </p>\n\n    <SocialMediaIcons/>\n\n    </div>\n    )\n  }\n}\n\n\n\nexport default Banner;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport About from './components/pages/About';\n\nimport Header from './components/layout/Header';\nimport Banner from './components/layout/Banner';\nimport SocialMediaIcons from './components/layout/SocialMediaIcons';\n// import Posts from './components/Posts';\n// import AddPost from './components/AddPost';\n\nimport uuid from 'uuid';\nimport axios from 'axios'\n\nimport logo from './logo.svg';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  state = {\n    posts: [\n      {\n        id: uuid.v4(),\n        title: \"Builder\",\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: \"Post 2\",\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: \"Post 3\",\n        completed: false\n      }\n    ]\n  }\n\n  // The reason the = blah => syntax is used is to save you from having to\n  //write method.bind(this) to pass in the context for this\n  markComplete = (id) => {\n    this.setState({posts: this.state.posts.map(post => {\n      if (post.id === id){\n        post.completed = !post.completed\n      }\n      return post;\n\n    }) })\n  }\n\n  deletePost = (id) => {\n    //The filter method is a high order array method, it conditionally returns\n    //an array. So filter iterates through the state object and returns on the\n    //condition. We only return posts that don't match the id that's passed becase\n    //we want to delete that. ... is the spread operator, this copies everything\n    //that is currently there\n    this.setState({posts: [...this.state.posts.filter(post => post.id !== id)]})\n    // console.log(id);\n\n    // Delete API requires id to delete\n    // axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    // .then(resp => this.setState({posts: [...this.state.posts.filter(post => post.id !== id)]}))\n  }\n\n  addPost = (title) => {\n    const newPost = {\n      id: uuid.v4(),\n      title: title,\n      completed: false\n    }\n    this.setState({ posts : [...this.state.posts, newPost]})\n\n    // console.log(title)\n    // axios.post('https://jsonplaceholder.typicode.com/todos', {\n    //   title: title,\n    //   completed: false\n    // })\n    // .then(resp => this.setState({ posts : [...this.state.posts, resp.data]}));\n\n  }\n\n  componentDidMount(){\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=1').then( resp => this.setState({ posts: resp.data}));\n    // axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then( resp => console.log(resp.data));\n  }\n\n  render(){\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n\n            {/*<Header />*/}\n\n            <Route exact path=\"/\" render={props=>(\n\n              <React.Fragment>\n\n              <Banner/>\n\n              {/*\n                <AddPost addPost={this.addPost}/>\n                <Posts posts={this.state.posts} markComplete={this.markComplete} deletePost={this.deletePost}/>\n              {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n\n              </React.Fragment>\n            )} />\n\n            <Route path=\"/about\" component={About} />\n\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}